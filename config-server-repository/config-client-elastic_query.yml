elastic-query-service:
  version: v1
  custom-audience: elastic-query-service

server:
  port: 8183
  servlet:
    context-path: /elastic-query-service

spring:
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8081/auth/realms/microservices-realm
          jwk-set-uri: http://localhost:8081/auth/realms/microservices-realm/protocol/openid-connect/certs
  jpa:
    open-in-view: false
    show-sql: true
    database-platform: org.hibernate.dialect.PostgreSQL9Dialect
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQL9Dialect
  datasource:
    url: jdbc:postgresql://localhost:5432/postgres?currentSchema=public&binaryTransfer=true&reWriteBatchedInserts=true
    username: postgres
    password: '(cipher)7d837e8bb918883e8128c83082d241842dfc8aa76ef4017a3e19981e8cb90fbe'
    driver-class-name: org.postgresql.Driver
    platform: postgres
    schema: classpath:init-schema.sql
    data: classpath:init-data.sql
    initialization-mode: always

elastic-query-config:
  textField: text
  is-repository: true

elastic-config:
  index-name: twitter-index
  connection-url: http://localhost:9200
  socket-timeout-ms: 5000
  connect-timeout-ms: 30000
  use-repository: true

user_config:
  username: test
  password: '(cipher)1d450fa4014214141938a99fcdfce1219b1e41f7a199b07524c391256e0d131d'
  roles: USER

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html

security:
  paths-to-ignore: /api-docs